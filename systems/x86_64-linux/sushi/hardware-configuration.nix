# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  #  boot = {
  #    initrd = {
  #      availableKernelModules = ["nvme" "xhci_pci" "thunderbolt" "usb_storage" "sd_mod"];
  #      kernelModules = [];
  #    };
  #    kernelModules = ["kvm-amd"];
  #    extraModulePackages = [];
  #  };

  #  fileSystems."/" = {
  #    device = "/dev/disk/by-uuid/e63a0375-6fdd-4f66-b720-73ccf75f2eda";
  #    fsType = "ext4";
  #  };
  #
  #  fileSystems."/boot" = {
  #    device = "/dev/disk/by-uuid/B8D5-F178";
  #    fsType = "vfat";
  #  };
  #
  #  swapDevices = [
  #    {device = "/dev/disk/by-uuid/e9caf6ca-eaf8-4632-8fed-497ac209124f";}
  #  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp1s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
